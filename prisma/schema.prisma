// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             Int                @id @default(autoincrement())
  name           String?
  email          String?            @unique
  password       String?
  address        String?
  cpf            String?            @unique
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt
  isActive       Boolean            @default(true)
  emailConfirmed Boolean            @default(false)
  emailToken     String?            @unique
  photo          String             @default("public/uploads/avatars/default-avatar.png")
  documents      Document[]
  socialItems    SocialItems?
  favoriteTeams  UserFavoriteTeam[]
}

model Document {
  id        String  @id @default(cuid())
  url       String
  type      String
  validated Boolean @default(false)
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
}

model Team {
  id            Int                @id @default(autoincrement())
  name          String
  logo          String?
  socialItems   SocialItems[]
  favoriteUsers UserFavoriteTeam[]
}

model SocialItems {
  id        Int     @id @default(autoincrement())
  bio       String?
  youtube   String?
  linkedin  String?
  twitch    String?
  twitter   String?
  instagram String?
  user      User    @relation(fields: [userId], references: [id])
  userId    Int     @unique
  teamId    Int?    @ignore
  team      Team?   @relation(fields: [teamId], references: [id]) @ignore
}

model UserFavoriteTeam {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  team   Team @relation(fields: [teamId], references: [id])
  teamId Int

  @@unique([userId, teamId])
}
